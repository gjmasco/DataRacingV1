// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataRacingV1.Migrations.TicketDb
{
    [DbContext(typeof(TicketDbContext))]
    partial class TicketDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataRacingV1.Components.Tickets.TicketEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClientId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Cost")
                        .HasColumnType("int");

                    b.Property<string>("EditorId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileArchivo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileEquipo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InfoAdmision")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InfoCombustible")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InfoComentarios")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InfoDTCs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InfoDominio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InfoDueno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InfoEscape")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InfoKm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InfoTransmision")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OriginalFileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehiculoFabricante")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("VehiculoManual")
                        .HasColumnType("bit");

                    b.Property<string>("VehiculoModelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VehiculoPotencia")
                        .HasColumnType("int");

                    b.Property<string>("VehiculoTipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehiculoVariante")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OriginalFileId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("YourNamespace.Models.UploadedFile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TicketEntityId")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TicketEntityId");

                    b.ToTable("UploadedFile");
                });

            modelBuilder.Entity("DataRacingV1.Components.Tickets.TicketEntity", b =>
                {
                    b.HasOne("YourNamespace.Models.UploadedFile", "OriginalFile")
                        .WithMany()
                        .HasForeignKey("OriginalFileId");

                    b.Navigation("OriginalFile");
                });

            modelBuilder.Entity("YourNamespace.Models.UploadedFile", b =>
                {
                    b.HasOne("DataRacingV1.Components.Tickets.TicketEntity", null)
                        .WithMany("UploadedFiles")
                        .HasForeignKey("TicketEntityId");
                });

            modelBuilder.Entity("DataRacingV1.Components.Tickets.TicketEntity", b =>
                {
                    b.Navigation("UploadedFiles");
                });
#pragma warning restore 612, 618
        }
    }
}
