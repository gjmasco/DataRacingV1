@using DataRacingV1.Models
<h3>TablaPotencia</h3>

@if (SelectedVehicle != null)
{
    <MudPaper Class="d-flex justify-center" style="max-width: 400px; width: 100%;">
        <div>
            <MudTable Elevation="1" Bordered="true" Hover="true" Class="mud-width-full" Items="@Elements">
                <HeaderContent>
                    <MudTh></MudTh>
                    <MudTh><strong><u>Original</u></strong></MudTh>
                    <MudTh><strong><u>Stage1</u></strong></MudTh>
                    <MudTh><strong><u>Gain</u></strong></MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd DataLabel=""><strong>@context.RowHeader</strong></MudTd>
                    <MudTd DataLabel="Original">@context.Column1</MudTd>
                    <MudTd DataLabel="Stage1">@context.Column2</MudTd>
                    <MudTd DataLabel="Gain" Style="color: red;">@context.Column3</MudTd>
                </RowTemplate>
            </MudTable>
        </div>
    </MudPaper>
}

@code {
    [Parameter]
    public Vehicle SelectedVehicle { get; set; }

    private List<Element> Elements = new List<Element>();

    protected override void OnParametersSet()
    {
        if (SelectedVehicle != null)
        {
            UpdateElements();
        }
    }

    private void UpdateElements()
    {
        Elements.Clear();
        Elements.Add(new Element { RowHeader = "Potencia", Column1 = SelectedVehicle.ORI.ToString(), Column2 = SelectedVehicle.MOD.ToString(), Column3 = SelectedVehicle.GAIN.ToString() });
        Elements.Add(new Element { RowHeader = "Torque", Column1 = SelectedVehicle.T_ORI.ToString(), Column2 = SelectedVehicle.T_MOD.ToString(), Column3 = SelectedVehicle.GAIN.ToString() });
    }

    public class Element
    {
        public string RowHeader { get; set; }
        public string Column1 { get; set; }
        public string Column2 { get; set; }
        public string Column3 { get; set; }
    }
}
